{
    "GlobalParameterSet": {
        "Environment": "Global",
        "PWDLength": "16",
        "UserCSVRelativePath": "MLZ-Admin-List.csv",
        "MissionAUs": [
            "Alpha",
            "Bravo",
            "Charlie"
        ],
        "License": {
            "addLicenses": [
                {
                "disabledPlans": [],
                "skuId": "dcb1a3ae-b33f-4487-846a-a640262fadf4"
                }
            ],
            "removeLicenses": []
        },
        "PKIConfig": "DOD",
        "comments": "Update these global parameters."
    },
    "StepParameterSet": {
        "PSTools": {
            "description": "Installs MS Graph PowerShell and Azure AD Preview modules.",
            "runstep": true,
            "comments": "AzureADPreview only used for uploading certificates for CBA.",
            "parameters": {  
                "Modules": [  
                    "Microsoft.Graph.PowerShell",  
                    "AzureADPreview"
                ]
            }
        },
        "AdminUnits": {
            "description": "Creates Admin Units for MLZ Core Administration",
            "runstep": true,
            "parameters": {
                "CoreAU": 
                {
                    "displayName": "MLZ Core Users and Groups",
                    "description": "Contains users and RBAC groups for management access to MLZ core subscriptions.",
                    "membershipType": null
                },
                "MissionAUGroupTemplate": 
                {
                    "displayName": "ZZZ RBAC Groups",
                    "description": "Contains groups created by the MLZ identity add-on for assigning RBAC roles for Mission spoke subscription ZZZ.",
                    "membershipType": null
                },
                "MissionAUUserTemplate": 
                {
                    "displayName": "ZZZ Users",
                    "description": "Contains users with management access for Mission spoke subscription ZZZ.",
                    "membershipType": "Dynamic",
                    "membershipRule": "(user.department -match \"ZZZ\")",
                    "membershipRuleProcessingState": "On"
                }
            }
        },
        "EmergencyAccess": {
            "description": "Creates Emergency Access Accounts",
            "runstep": true,
            "comments": "",
            "parameters": {
                "Users": [
                    {
                        "userPrincipalName": "MLZEA01",
                        "displayName": "MLZ Emergency 01",
                        "mailNickname": "MLZEA01",
                        "MissionCode": "EA"
                    },
                    {
                        "userPrincipalName": "MLZEA02",
                        "displayName": "MLZ Emergency 02",
                        "mailNickname": "MLZEA02",
                        "MissionCode": "EA"
                    }
                ],
                "EAGroup": {
                    "displayName": "Emergency Access Accounts",
                    "description": "Contains the break-glass accounts for the MLZ environment.",
                    "isAssignableToRole": true,
                    "mailEnabled": false,
                    "mailNickname": "MLZEAAccts",
                    "securityEnabled": true
                },
                "AdministrativeUnit": {
                    "displayName": "MLZ EA",
                    "description": "Contains Emergency Access accounts",
                    "membershipType": null,
                    "isMemberManagementRestricted": true,
                    "visibility": "HiddenMembership"
                }
            }
        },
        "NamedAccounts": {
            "description": "Creates named administrator accounts for managing MLZ.",
            "runstep": true,
            "comments": "",
            "parameters": { 
                "Users": {
                    "UserCSV": "MLZ-Admin.List.csv",
                    "CoreMissionCode": "MLZ",
                    "CoreAdminUnit": "MLZ-Core Admins"
                },
                "LicenseGroup": {
                    "displayName": "MLZ-Licensing-AADP2",
                    "description": "Licenses new users for Azure AD Premium P2",
                    "groupTypes": [
                        "DynamicMembership"
                    ],
                    "securityEnabled": true,
                    "mailEnabled": false,
                    "mailNickname": "MLZ-Licensing-AADP2",
                    "membershipRule": "(user.userType -eq \"Member\")",
                    "membershipRuleProcessingState": "On"
                }
            }
        },
        "AuthNMethods": {
            "description": "Configures Passwordless Authentication Methods for MLZ tenant.",
            "runstep": true,
            "comments": "",
            "parameters": {
                "SettingsFile": "/settings/AuthenticationMethods.txt",
                "RegistrationSettings": {
                    "snoozeDurationInDays": "3",
                    "state": "Default",
                    "targetAuthenticationMethod": "MicrosoftAuthenticator",
                    "comment": "Script includes All Users and excludes Emergency Access Account group."
                },
                "AuthenticationMethodsConfigurations": {
                    "Fido2": {
                        "state": "enabled",
                        "targetType": "group",
                        "targetId": "all_users",
                        "isSelfServiceRegistrationAllowed": true,
                        "isAttestationEnforced": false
                    },
                    "MicrosoftAuthenticator": {
                        "state": "enabled",
                        "targetType": "group",
                        "targetId": "all_users",
                        "isRegistrationRequired": false,
                        "authenticationMode": "any"
                    },
                    "TemporaryAccessPass": {
                        "state": "disabled",
                        "targetType": null,
                        "targetId": null
                    },
                    "Email": {
                        "state": "disabled",
                        "targetType": null,
                        "targetId": null
                    },
                    "SoftwareOath": {
                        "state": "disabled",
                        "targetType": null,
                        "targetId": null
                    },
                    "X509Certificate": {
                        "state": "enabled",
                        "targetType": "group",
                        "targetId": "all_users",
                        "isRegistrationRequired": false,
                        "certificateUserBindings": [
                            {
                                "x509CertificateField": "PrincipalName",
                                "userProperty": "certificateUserIds",
                                "priority": 1
                            },
                            {
                                "x509CertificateField": "PrincipalName",
                                "userProperty": "onPremisesUserPrincipalName",
                                "priority": 2
                            }
                        ],
                        "authenticationModeConfiguration": {
                            "x509CertificateAuthenticationDefaultMode": "x509CertificateMultiFactor"
                        }
                    },
                    "Sms": {
                        "state": "disabled",
                        "targetType": "group",
                        "targetId": "all_users"
                    }
                }
            }
        },
        "CBA": {
            "id": "06",
            "description": "Configures CBA for DOD CAC",
            "comments": "This could include the exact CBA configuration and certificates for DOD PKI. Need ability to upload certificates via MS Graph PowerShell."
        },
        "Groups": {
            "id": "07",
            "description": "Creates RBAC groups for MLZ",
            "runstep": true,
            "comments": "",
            "parameters": {
                "SecurityGroups": [
                    {
                        "name": "Platform Owner",
                        "mailNickname": "Platform-Owner",
                        "core": true,
                        "mission": false,
                        "description": "MLZ - User Access Administrator at the highest management group under root"
                    },
                    {
                        "name": "Subscription Owner",
                        "mailNickname": "SubOwner",
                        "core": true,
                        "mission": true,
                        "description": "MLZ - Subscription owner"
                    },
                    {
                        "name": "Security Operations",
                        "mailNickname": "Security-Ops",
                        "core": true,
                        "mission": false,
                        "description": "MLZ - Sentinel contributor, Logic Apps Contributor, Security Reader."
                    },
                    {
                        "name": "Subscription Contributor",
                        "mailNickname": "SubContributor",
                        "core": true,
                        "mission": true,
                        "description": "MLZ - Subscription contributor"
                    },
                    {
                        "name": "Subscription Reader",
                        "mailNickname": "SubReader",
                        "core": true,
                        "mission": true,
                        "description": "MLZ - Subscription Reader"
                    },
                    {
                        "name": "Subscription Owner NoNetwork",
                        "mailNickname": "Sub-Owner-NoNetwork",
                        "core": true,
                        "mission": true,
                        "description": "MLZ - custom role that grants owner with exception of network write permissions."
                    },
                    {
                        "name": "Application Owners",
                        "mailNickname": "AppOwners-MLZ",
                        "core": true,
                        "mission": true,
                        "description": "MLZ - custom role for Application Owners."
                    }
                ],
                "PAGs": [
                    {
                        "name": "RBAC Groups Administrator",
                        "mailNickname": "RBAC-GroupAdmins",
                        "core": true,
                        "mission": true,
                        "scope": "/administrativeUnits/",
                        "description": "MLZ - Group Administrator scoped to Administrative Unit.",
                        "aadrole": "Groups Administrator"
                    },
                    {
                        "name": "User Administrator",
                        "mailNickname": "UserAdmin",
                        "core": true,
                        "mission": true,
                        "scope": "/administrativeUnits/",
                        "description": "MLZ - User Administrator scoped to Administrative Unit.",
                        "aadrole": "User Administrator"
                    },
                    {
                        "name": "Application Developers",
                        "mailNickname": "AppDev",
                        "core": true,
                        "mission": false,
                        "scope": "/",
                        "description": "MLZ - Application Developer group.",
                        "aadrole": "Application Developer"
                    },
                    {
                        "name": "Application Administrators",
                        "mailNickname": "AppAdmins",
                        "core": true,
                        "mission": false,
                        "scope": "/",
                        "description": "MLZ - Application Administrator group.",
                        "aadrole": "Application Administrator"
                    }
                ]
            } 
        },
        "PIM": {
            "description": "Configure Privileged Identity Management Roles",
            "runstep": true,
            "comments": "Access Reviews Enabled Automatically.",
            "parameters": {
                "comment": "Eligibility and Duration must be in proper format (PT#H for hours) (P#D for days)",
                "Roles": [
                    {
                        "name": "Global Administrator",
                        "scope": [
                            "tenant"
                        ],
                        "EligibilityMaxDurationInDays": "P180D",
                        "ActivationMaxDurationInHours": "PT4H",
                        "isExpirationRequired": false
                    },
                    {
                        "name": "Application Administrator",
                        "scope": [
                            "tenant"
                        ],
                        "EligibilityMaxDurationInDays": "P180D",
                        "ActivationMaxDurationInHours": "PT4H",
                        "isExpirationRequired": false
                    },
                    {
                        "name": "Application Developer",
                        "scope": [
                            "tenant"
                        ],
                        "EligibilityMaxDurationInDays":"P180D",
                        "ActivationMaxDurationInHours": "PT4H",
                        "isExpirationRequired": false
                    },
                    {
                        "name": "Groups Administrator",
                        "scope": [
                            "tenant",
                            "mission"
                        ],
                        "EligibilityMaxDurationInDays": "P180D",
                        "ActivationMaxDurationInHours": "PT4H",
                        "isExpirationRequired": false
                    },
                    {
                        "name": "User Administrator",
                        "scope": [
                            "tenant",
                            "mission"
                        ],
                        "EligibilityMaxDurationInDays": "P180D",
                        "ActivationMaxDurationInHours": "PT4H",
                        "isExpirationRequired": false
                    }
                ]
            }
        },
        "ConditionalAccess": {
            "description": "Configures Conditional Access for MLZ baseline",
            "runstep": true,
            "comments": "Excludes current user and Break Glass accounts from each role. Report Only for now",
            "parameters": {
                "MLZ01": {
                    "displayname": "MLZ001: MFA - Require multifactor authentication for all users",
                    "state": "enabledForReportingButNotEnforced",
                    "conditions": {
                        "userRiskLevels": [],
                        "clientAppTypes": [
                            "all"
                        ],
                        "applications": {
                            "includeApplications": [
                                "All"
                            ],
                            "includeUserActions": []
                        },
                        "users": {
                            "includeUsers": [
                                "All"
                            ],                    
                            "excludeUsers": [],
                            "includeGroups": [],
                            "excludeGroups": [],
                            "includeRoles": [],
                            "excludeRoles": []
                        },
                        "locations": {
                            "includeLocations": [],
                            "excludeLocations": []
                        }
                    },
                    "grantControls": {
                        "operator": "OR",
                        "builtInControls": [
                            "mfa"
                        ],
                        "authenticationStrength": null
                    }
                },
                "MLZ02": {
                    "displayname": "MLZ002: MFA - Block Legacy Authentication",
                    "state": "enabledForReportingButNotEnforced",
                    "conditions": {
                        "userRiskLevels": [],
                        "clientAppTypes": [
                            "exchangeActiveSync",
                            "other"
                        ],
                        "applications": {
                            "includeApplications": [
                                "All"
                            ],
                            "includeUserActions": []
                        },
                        "users": {
                            "includeUsers": [
                                "All"
                            ],                    
                            "excludeUsers": [],
                            "includeGroups": [],
                            "excludeGroups": [],
                            "includeRoles": [],
                            "excludeRoles": []
                        },
                        "locations": {
                            "includeLocations": [],
                            "excludeLocations": []
                        }
                    },
                    "grantControls": {
                        "operator": "OR",
                        "builtInControls": [
                            "block"
                        ],
                        "authenticationStrength": null
                    }
                },
                "MLZ03": {
                    "displayname": "MLZ003: MFA - Securing security info registration",
                    "state": "enabledForReportingButNotEnforced",
                    "conditions": {
                        "userRiskLevels": [],
                        "clientAppTypes": [
                            "all"
                        ],
                        "applications": {
                            "includeApplications": [],
                            "includeUserActions": [
                                "urn:user:registersecurityinfo"
                            ]
                        },
                        "users": {
                            "includeUsers": [
                                "All"
                            ],
                            "excludeUsers": [
                                "GuestsOrExternalUsers"
                            ],
                            "includeRoles": [],
                            "excludeRoles": [
                                "62e90394-69f5-4237-9190-012177145e10"
                            ],
                            "includeGroups": [],
                            "excludeGroups": []
                        },
                        "locations": {
                            "includeLocations": [
                                "All"
                            ],
                            "excludeLocations": [
                                "AllTrusted"
                            ]
                        }
                    },
                    "grantControls": {
                        "operator": "OR",
                        "builtInControls": [
                            "mfa"
                        ]
                    }
                },
                "MLZ04": {
                    "displayname": "MLZ004: Admins - Require phishing-resistant MFA for Azure AD admins",
                    "state": "enabledForReportingButNotEnforced",
                    "sessionControls": null,
                    "conditions": {
                        "userRiskLevels": [],
                        "clientAppTypes": [
                            "all"
                        ],
                        "applications": {
                            "includeApplications": [
                                "All"
                            ],
                            "includeUserActions": []
                        },
                        "users": {
                            "includeUsers": [],
                            "excludeUsers": [],
                            "includeGroups": [],
                            "excludeGroups": [],
                            "includeRoles": [
                                "62e90394-69f5-4237-9190-012177145e10",
                                "194ae4cb-b126-40b2-bd5b-6091b380977d",
                                "f28a1f50-f6e7-4571-818b-6a12f2af6b6c",
                                "29232cdf-9323-42fd-ade2-1d097af3e4de",
                                "b1be1c3e-b65d-4f19-8427-f6fa0d97feb9",
                                "729827e3-9c14-49f7-bb1b-9608f156bbb8",
                                "b0f54661-2d74-4c50-afa3-1ec803f12efe",
                                "fe930be7-5e62-47db-91af-98c3a49a38b1",
                                "c4e39bd9-1100-46d3-8c65-fb160da0071f",
                                "9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3",
                                "158c047a-c907-4556-b7ef-446551a6b5f7",
                                "966707d0-3269-4727-9be2-8c3a10f19b9d",
                                "7be44c8a-adaf-4e2a-84d6-ab2649e08a13",
                                "e8611ab8-c189-46e8-94e1-60213ab1f814"
                            ],
                            "excludeRoles": []
                        },
                        "locations": {
                            "includeLocations": [],
                            "excludeLocations": []
                        }
                    },
                    "grantControls": {
                        "operator": "OR",
                        "builtInControls": [],
                        "authenticationStrength": {
                            "id": "00000000-0000-0000-0000-000000000004",
                            "displayName": "Phishing resistant MFA",
                            "description": "Phishing-resistant, Passwordless methods for the strongest authentication, such as a FIDO2 security key",
                            "policyType": "builtIn",
                            "requirementsSatisfied": "mfa",
                            "allowedCombinations": [
                                "windowsHelloForBusiness",
                                "fido2",
                                "x509CertificateMultiFactor"
                            ]
                        }
                    }
                },
                "MLZ05": {
                    "displayname": "MLZ005: Admins - Require phishing-resistant MFA for Azure Management",
                    "state": "enabledForReportingButNotEnforced",
                    "conditions": {
                        "userRiskLevels": [],
                        "clientAppTypes": [
                            "all"
                        ],
                        "applications": {
                            "includeApplications": [
                                "797f4846-ba00-4fd7-ba43-dac1f8f63013"
                            ],
                            "includeUserActions": []
                        },
                        "users": {
                            "includeUsers": [
                                "All"
                            ],
                            "excludeUsers": [],
                            "includeGroups": [],
                            "excludeGroups": [],
                            "includeRoles": [],
                            "excludeRoles": []
                        },
                        "locations": {
                            "includeLocations": [],
                            "excludeLocations": []
                        }
                    },
                    "grantControls": {
                        "operator": "OR",
                        "builtInControls": [],
                        "authenticationStrength": {
                            "id": "00000000-0000-0000-0000-000000000004",
                            "displayName": "Phishing resistant MFA",
                            "description": "Phishing-resistant, Passwordless methods for the strongest authentication, such as a FIDO2 security key",
                            "policyType": "builtIn",
                            "requirementsSatisfied": "mfa",
                            "allowedCombinations": [
                                "windowsHelloForBusiness",
                                "fido2",
                                "x509CertificateMultiFactor"
                            ]
                        }
                    }
                },
                "MLZ06": {
                    "displayname": "MLZ006: Risk - Require password change for high risk users",
                    "state": "enabledForReportingButNotEnforced",
                    "conditions": {
                        "userRiskLevels": [
                            "high"
                        ],
                        "clientAppTypes": [
                            "all"
                        ],
                        "applications": {
                            "includeApplications": [
                                "All"
                            ],
                            "includeUserActions": []
                        },
                        "users": {
                            "includeUsers": [
                                "All"
                            ],
                            "excludeUsers": [],
                            "includeGroups": [],
                            "excludeGroups": [],
                            "includeRoles": [],
                            "excludeRoles": []
                        },
                        "locations": {
                            "includeLocations": [],
                            "excludeLocations": []
                        }
                    },
                    "grantControls": {
                        "operator": "AND",
                        "builtInControls": [
                            "mfa",
                            "passwordChange"
                        ]
                    }
                }
            }
        },
        "TenantPolicies": {
            "description": "Apply user, group, application, external collaboration settings.",
            "runstep": true,
            "comments": "",
            "parameters": {
                "authorizationPolicy": {
                    "allowInvitesFrom": "adminsAndGuestInviters",
                    "allowedToSignUpEmailBasedSubscriptions": true,
                    "allowedToUseSSPR": true,
                    "allowEmailVerifiedUsersToJoinOrganization": false,
                    "allowUserConsentForRiskyApps": null,
                    "blockMsolPowerShell": false,
                    "enabledPreviewFeatures": [],
                    "guestUserRoleId": "10dae51f-b6af-4016-8d66-8c2a99b929b3",
                    "permissionGrantPolicyIdsAssignedToDefaultUserRole": [
                        "ManagePermissionGrantsForSelf.microsoft-user-default-legacy"
                    ],
                    "defaultUserRolePermissions": {
                        "allowedToCreateApps": false,
                        "allowedToCreateSecurityGroups": true,
                        "allowedToCreateTenants": false,
                        "allowedToReadBitlockerKeysForOwnedDevice": true,
                        "allowedToReadOtherUsers": true
                        }
                },
                "externalIdentityPolicy": {
                    "allowExternalIdentitiesToLeave": true,
                    "allowDeletedIdentitiesDataRemoval": false
                },
                "adminConsentRequestPolicy": {
                    "isEnabled": false
                }
            }
        },
        "EntitlementsManagement": {
            "id": "11",
            "description": "Configures Entitlements Management Access packages for each Mission.",
            "runstep": false,
            "comments": "Placeholder."
        }
    }
}